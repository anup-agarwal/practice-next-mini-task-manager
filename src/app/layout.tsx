import type { Metadata } from "next"
import { Geist, Geist_Mono } from "next/font/google"
import "./globals.css"
import SessionProvider from "@/context/SessionProvider"
import { cookies } from "next/headers"
import { jwtVerify } from "jose"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const cookieStore = await cookies()
  const cookie = cookieStore.get("token")
  let session = { email: "" }
  if (cookie) {
    try {
      const payload = await jwtVerify<{ email: string }>(
        cookie.value,
        new TextEncoder().encode("secret")
      )
      session = { email: payload.payload.email }
    } catch (error) {
      console.log(error)
    }
  }
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SessionProvider session={session}>{children}</SessionProvider>
      </body>
    </html>
  )
}
